// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Guild {
  id        String   @id @default(cuid()) @map("_id")
  guildId   String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Welcomer {
  id        String   @id @default(cuid()) @map("_id")
  guildId   String   @unique
  enabled   Boolean  @default(false)
  channelId String
  message   String
  dm        DM
  embeds    Embed[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// TODO add image and webhook support

model Goodbye {
  id        String   @id @default(cuid()) @map("_id")
  guildId   String   @unique
  channelId String
  message   String
  embeds    Embed[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

type DM {
  enabled Boolean @default(false)
  message String
  embeds Embed[] 
}


type Embed {
  title String 
  description String
  url String
  timestamp DateTime 
  color Int
  footer EmbedFooter
  image EmbedImage
  thumbnail EmbedImage
  author EmbedAuthor
  fields EmbedField[]
}

type EmbedField {
  name String
  value String
  inline Boolean?
}

type EmbedAuthor {
  name String
  url String
  iconUrl String
}

type EmbedImage {
  url String
  height Int?
  width Int?
}

type EmbedFooter {
  text String
  iconUrl String?
}

model User {
  id        String   @id @default(cuid()) @map("_id")
  name      String?
  avatar    String?
  accessToken String?
  refreshToken String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        String   @id @default(cuid()) @map("_id")
  userId    String
  expiresAt DateTime
}